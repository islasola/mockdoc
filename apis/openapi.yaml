openapi: "3.0.0"
info:
    version: "1.0.0"
    title: "API Reference"
    description: OpenAPI for operations on Zilliz Cloud
servers:
    - url: https://api.{cloud-region}.zillizcloud.com/v1
      variables:
        cloud-region:
            default: aws-us-east-1
            description: Indicates the cloud region that accommodates your vector databases.
paths:
    /clouds:
        post:
            summary: List Cloud Providers
            description: Lists available cloud providers.
            tags:
                - Global Metadata
            responses:
                200:
                    description: Returns a list of all available cloud providers on Zilliz Cloud.
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/Clouds"
                                    - $ref: "#/components/schemas/Error"
                            examples:
                                success:
                                    $ref: "#/components/examples/Clouds"
                                failure:
                                    $ref: "#/components/examples/Errors"
    /regions:
        post:
            summary: List Cloud Regions
            description: Lists all available regions that the specified cloud provider offers.
            tags:
                - Global Metadata
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                cloudId:
                                    description: The ID of a valid cloud provider.
                                    type: string
            responses:
                200:
                    description: Returns a list of all available regions that the specified cloud provider offers.
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/Regions"
                                    - $ref: "#/components/schemas/Error"
    /clusters:
        get:
            summary: List Vector Databases
            description: Lists all available vector databases.
            tags: 
                - Cluster Operations
            parameters:
                - in: query
                  name: pageSize
                  description: The number of records on each page returned.
                  schema:
                      type: integer
                - in: query
                  name: current
                  description: The current page number.
                  schema:
                      type: integer
            responses:
                200:
                    description: Returns a list of your vector databases.
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/Clusters"
                                    - $ref: "#/components/schemas/Error"
        post:
            summary: Create Vector Database
            description: Creates a vector database.
            tags: 
                - Cluster Operations
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                clusterType:
                                    description: The type of the vector database to be created. Available options are **Performance-optimized** and **Capacity-optimized**, This parameter is optional and it defaults to **Performance-optimized**.
                                    type: string
                                cuSize:
                                    description: The size of the CU to be used for the created vector database. It is an integer from 1 to 256.
                                    type: integer
                                clusterName:
                                    description: The name of the vector database to be created. It is a string of no more than 32 characters.
                                    type: string
                                description:
                                    description: The description of the vector database to be created. This parameter is optional.
                                    type: string
                                adminPwd:
                                    description: The admin password of the vector database. It is a string of 8 to 128 characters containing uppercase and lowercase alphanumerical characters and special characters such as `~`, `!`, `@`, `#`, `$`, `%`, `^`, `&`, `*`, `?`, `_`, and `-`.
                                    type: string
                            required:
                                - cuSize
                                - clusterName
                                - adminPwd
            responses:
                200:
                    description: Returns the ID of the created vector database with a prompt message indicating the success.
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/Error"
                                    - $ref: "#/components/schemas/ClusterOps"
    /clusters/{clusterId}:
        get:
            summary: Describe Vector Database
            description: Lists the details of the specified vector database.
            tags: 
                - Cluster Operations
            parameters:
                - in: path
                  name: clusterId
                  required: true
                  description: The unique string that identifies the vector database in concern, you can use either the ID or Name of the vector database.
                  schema:
                      type: string
            responses:
                200:
                    description: Returns the details of the specified vector database, including its ID, name, type, status, number of created snapshots, etc. or an error message with an error code.
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/Error"
                                    - $ref: "#/components/schemas/ClusterOps"
        delete:
            summary: Drop a Vector Database
            description: Deletes the specified vector database.
            tags: 
                - Cluster Operations
            parameters:
                - in: path
                  name: clusterId
                  required: true
                  description: The unique string that identifies the vector database in concern, you can use either the ID or Name of the vector database.
                  schema:
                      type: string
            responses:
                200:
                    description: Returns the ID of the deleted vector database with a prompt message indicating the success or an error message with an error code.
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/Error"
                                    - $ref: "#/components/schemas/ClusterOps"
    /clusters/{clusterId}/config:
        post:
            summary: Configure Vector Database
            description: Configures the specified vector database. Currently, you can configure the its CU size using this API.
            tags:
                - Cluster Operations
            parameters:
                - in: path
                  name: clusterId
                  required: true
                  description: The unique string that identifies the vector database in concern, you can use either the ID or Name of the vector database.
                  schema:
                      type: string
                - in: query
                  name: cuSize
                  required: true
                  description: The size of the CU that accommodates the specified vector database.
                  schema:
                       type: integer
            responses:
                200:
                    description: Returns the ID of the vector database affected by this operation with a prompt message indicating the success or an error message with an error code.
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/Error"
                                    - $ref: "#/components/schemas/ClusterOps"
    /clusters/{clusterId}/suspend:
        post:
            summary: Suspend Vector Database
            description: Suspends the specified vector database.
            tags: 
                - Cluster Operations
            parameters:
                - in: path
                  name: clusterId
                  required: true
                  description: The unique string that identifies the vector database in concern, you can use either the ID or Name of the vector database.
                  schema:
                      type: string
            responses:
                200:
                    description: Returns the ID of the suspended vector database with a prompt message indicating the success or an error message with an error code.
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/Error"
                                    - $ref: "#/components/schemas/ClusterOps"
    /clusters/{clusterId}/resume:
        post:
            summary: Resume Vector Database
            description: Resumes the specified vector database.
            tags: 
                - Cluster Operations
            parameters:
                - in: path
                  name: clusterId
                  required: true
                  description: The unique string that identifies the vector database in concern, you can use either the ID or Name of the vector database.
                  schema:
                      type: string
            responses:
                200:
                    description: Returns the ID of the vector database that continues to serve, with a prompt message indicating the success or an error message with an error code.
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/Error"
    /{clusterId}/collections:
        get:
            summary: List Collections
            description: Lists the collections in the specified vector database.
            tags: 
                - Collection Operations
            parameters:
                - in: path
                  name: clusterId
                  required: true
                  description: The unique string that identifies the vector database in concern, you can use either the ID or Name of the vector database.
                  schema:
                      type: string
            responses:
                200:
                    description: Returns a list of collections in the specified vector database.
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/Collections"
                                    - $ref: "#/components/schemas/Error"
    /{clusterId}/collections/create:
        post:
            summary: Create Collection
            description: Creates a collection in the specified vector database. As to the request body, there are two options available. If you choose to use **Option 1**, Zilliz Cloud will create the `id` and `vector` fields in the created collection.
            tags: 
                - Collection Operations
            parameters:
                - in: path
                  name: clusterId
                  required: true
                  description: The unique string that identifies the vector database in concern, you can use either the ID or Name of the vector database.
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            oneOf:
                                - $ref: "#/components/schemas/CollectionCreateSimple"
                                - $ref: "#/components/schemas/CollectionCreateWithSchemaAndIndex"
            responses:
                200:
                    description: Empty returns.
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/Empty"
                                    - $ref: "#/components/schemas/Error"                    
    /{clusterId}/collections/describe:
        post:
            summary: Describe Collection
            description: Describes the specified collection in detail.
            tags: 
                - Collection Operations
            parameters:
                - in: path
                  name: clusterId
                  required: true
                  description: The unique string that identifies the vector database in concern, you can use either the ID or Name of the vector database.
                  schema:
                      type: string
                - in: query
                  name: collectionName
                  required: true
                  description: The name of the collection in concern.
                  schema:
                        type: string
            responses:
                200:
                    description: Returns the detailed information about the specified collection.
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/CollectionCreateWithSchemaAndIndex"
                                    - $ref: "#/components/schemas/Error" 
    /{clusterId}/collections/drop:
        post:
            summary: Drop Collection
            description: Drops the specified collection.
            tags: 
                - Collection Operations
            parameters:
                - in: path
                  name: clusterId
                  required: true
                  description: The unique string that identifies the vector database in concern, you can use either the ID or Name of the vector database.
                  schema:
                      type: string
                - in: query
                  name: collectionName
                  required: true
                  description: The name of the collection in concern.
                  schema:
                        type: string
            responses:
                200:
                    description: Empty returns.
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/Empty"
                                    - $ref: "#/components/schemas/Error"
    /{clusterId}/search:
        post:
            summary: Conduct Vector Search
            description: Conducts a search against the vector field in the specified collection.
            tags: 
                - Vector Operations
            parameters:
                - in: path
                  name: clusterId
                  required: true
                  description: The unique string that identifies the vector database in concern, you can use either the ID or Name of the vector database.
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                collectionName:
                                    type: string
                                    description: The name of the collection in concern.
                                outputFields:
                                    type: array
                                    description: The fields to be returned along with the vector search results.
                                    items:
                                        type: string
                                anns:
                                    type: object
                                    description: The search settings
                                    properties:
                                        vectorField:
                                            type: array
                                            items: 
                                                type: number
                                                format: float
                                level:
                                    type: integer
                                    description: The level of accurary of the search results. It defaults to 1 and possible values are 1, 2, and 3. A higher value indicates a more accurate result at a slower performance.
                                filter:
                                    description: The filtering condition for the vector search.
                                    type: string
                                limit:
                                    description: The maximum number of records to return.
                                    type: integer
                                offset:
                                    description: The position at which the results are truncated. This usually works with `limit` to return a small set of records in the middle of the returned result.
                                    type: integer
                            required:
                                - collectionName
            responses:
                200:
                    description: Returns the results of the vector search.
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/SearchResults"
                                    - $ref: "#/components/schemas/Error"
    /{clusterId}/query:
        post: 
            summary: Conduct Scalar Query
            description: Conducts a query against scalar fields in the specified collection.
            tags: 
                - Vector Operations
            parameters:
                - in: path
                  name: clusterId
                  required: true
                  description: The unique string that identifies the vector database in concern, you can use either the ID or Name of the vector database.
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                collectionName:
                                    type: string
                                    description: The name of the collection in concern.
                                filter:
                                    description: The filtering condition for the query.
                                    type: string
                                outputFields:
                                    type: array
                                    description: The fields to be returned along with the query results.
                                    items:
                                        type: string
                            required:
                                - collectionName
                                - filter
            responses:
                200:
                    description: Returns the results of the query.
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/SearchResults"
                                    - $ref: "#/components/schemas/Error"
    /{clusterId}/insert:
        post:
            summary: Insert Records to Collection
            description: Inserts the records that match the filtering condition from the specified collection. Notes that the size of the POST request should be no greater than 50 MB, the number or rows to be inserted should be no more than 5,000 rows, and the schema of the `data` object should match the schema of the specified collection.
            tags: 
                - Vector Operations
            parameters:
                - in: path
                  name: clusterId
                  required: true
                  description: The unique string that identifies the vector database in concern, you can use either the ID or Name of the vector database.
                  schema:
                      type: string
            requestBody:
                required: true
                content: 
                    application/json:
                        schema:
                            type: object
                            properties:
                                collectionName:
                                    type: string
                                    description: The name of the collection in concern.
                                data:
                                    type: array
                                    description: The data records to be inserted.
                                    items:
                                        type: object
                            required:
                                - collectionName
                                - data
            responses:
                200:
                    description: Returns the IDs of the inserted records.
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/InsertDeleteResult"
                                    - $ref: "#/components/schemas/Error"
    /{clusterId}/delete:
        post:
            summary: Drop Records from Collection
            description: Drops the records that match the filtering condition from the specified collection.
            tags: 
                - Vector Operations
            parameters:
                - in: path
                  name: clusterId
                  required: true
                  description: The unique string that identifies the vector database in concern, you can use either the ID or Name of the vector database.
                  schema:
                      type: string
            requestBody:
                required: true
                content: 
                    application/json:
                        schema:
                            type: object
                            properties:
                                collectionName:
                                    type: string
                                    description: The name of the collection in concern.
                                filter:
                                    description: The filtering condition for the deletion.
                                    type: string
                            required:
                                - collectionName
                                - filter
            responses:
                200:
                    description: Returns the IDs of deleted records.
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/RecordDeleteResult"
                                    - $ref: "#/components/schemas/Error"
components:
    schemas:
        Empty:
            type: object
            properties:
                code: 
                    type: integer
                data:
                    type: object
        Error:
            type: object
            properties:
                code:
                    type: integer
                message:
                    type: string
        Clouds:
            type: object
            properties:
                code:
                    type: integer
                data:
                    type: array
                    items:
                        type: object
                        properties:
                            cloudId:
                                type: string
                            description:
                                type: string
        Regions:
            type: object
            properties:
                code:
                    type: integer
                data:
                    type: array
                    items:
                        type: object
                        properties:
                            cloudId:
                                type: string
                            regionId:
                                type: string
                            apiBaseUrl:
                                type: string
        Clusters:
            type: object
            properties:
                code:
                    type: integer
                data:
                    type: object
                    properties:
                        count:
                            type: integer
                        currentPage:
                            type: integer
                        pageSize:
                            type: integer
                        clusters:
                            type: array
                            items:
                                type: object
                                properties:
                                    clusterId:
                                        type: string
                                    clusterName:
                                        type: string
                                    description:
                                        type: string
                                    clusterType:
                                        type: string
                                    cuSize:
                                        type: integer
                                    status:
                                        type: string
                                    connectAddress:
                                        type: string
                                    privateLinkAddress:
                                        type: string
                                    createTime:
                                        type: string
        Cluster:
            type: object
            properties:
                code:
                    type: integer
                data:
                    type: object
                    properties:
                        clusterId:
                            type: string
                        clusterName:
                            type: string
                        description:
                            type: string
                        clusterType:
                            type: string
                        cuSize:
                            type: integer
                        status:
                            type: string
                        connectAddress:
                            type: string
                        privateLinkAddress:
                            type: string
                        createTime:
                            type: string
                        storageSize:
                            type: integer
                        snapshotNumber:
                            type: integer
                        createProgress:
                            type: integer
        ClusterOps:
            type: object
            properties:
                code:
                    type: integer
                data:
                    type: object
                    properties:
                        clusterId:
                            type: string
                        prompt:
                            type: string
        Collections:
            type: object
            properties:
                code:
                    type: integer
                data:
                    type: object
                    properties:
                        collectionCount:
                            type: integer
                        collections:
                            type: array
                            items:
                                type: object
                                properties:
                                    collectionId:
                                        type: string
                                    collectionName:
                                        type: string
        CollectionCreateSimple:
            type: object
            properties:
                collectionName:
                    type: string
                    description: The name of the collection to be created.
                dimensions:
                    type: integer
                    description: The number of dimensions for the vector field of the collection.
                descriptions:
                    type: string
                    description: The description of the collection to be created.
            required:
                - collectionName
                - dimensions
        CollectionCreateWithSchemaAndIndex:
            type: object
            properties:
                collectionName:
                    type: string
                    description: The name of the collection to be created.
                shardsNum:
                    type: integer
                    description: The number of shards to be created for the collection. This parameter is optional.
                description:
                    type: string
                    description: The description of the collection to be created. This parameter is optional
                fields:
                    type: array
                    description: The fields of the collection to be created.
                    items:
                        type: object
                        properties:
                            name:
                                type: string
                            type:
                                type: string
                            primaryKey:
                                type: boolean
                            autoId:
                                type: boolean
                            description:
                                type: string
                indexes:
                    type: array
                    description: The fields to be indexed along with the creation of the database. This parameter is optional.
                    items:
                        type: object
                        properties:
                            indexName:
                                type: string
                                description: The name of the index file to be created.
                            fieldName:
                                type: string
                                description: The name of field for which the index file is to be created.
                            metricType:
                                type: string
                                description: The algorithm used to measure the distance between vectors.
            required:
                - collectionName
                - fields
        SearchResults:
            type: object
            properties:
                code:
                    type: integer
                data: 
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: integer
                            name:
                                type: string
                            feature:
                                type: array
                                items:
                                    type: number
                                    format: float
                            distance:
                                type: number
                                format: float
        RecordDeleteResult:
            type: object
            properties:
                code:
                    type: integer
                data:
                    type: object
                    properties:
                        deleteCount:
                            type: integer
                        deleteIds:
                            type: array
                            items:
                                type: string
        InsertDeleteResult:
            type: object
            properties:
                code:
                    type: integer
                data:
                    type: object
                    properties:
                        insertCount:
                            type: integer
                        insertIds:
                            type: array
                            items:
                                type: string
    examples:
        Clouds:
            summary: List Clouds
            description: Lists all available cloud providers.
            value: { "code": 200, "data": [ { "cloudId": "aws", "description": "amazon cloud" }, { "cloudId": "gcp", "description": "google cloud" } ] }
        Errors:
            summary: Error Message
            description: An example error message
            value: { "code": 80001, "message": "Illegal API key." }
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
security:
    - bearerAuth: []
