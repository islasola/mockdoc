paths./v1/clouds.get.summary: List Cloud Providers
paths./v1/clouds.get.description: Lists all cloud providers available on Zilliz Cloud.
paths./v1/clouds.get.parameters.0.description: 
paths./v1/clouds.get.responses.200.description: Returns a list of all available cloud providers on Zilliz Cloud.
paths./v1/clouds.get.responses.200.content.application/json.schema.anyOf.0.properties.data.items.properties.cloudId.description: The ID of a cloud provider.
paths./v1/clouds.get.responses.200.content.application/json.schema.anyOf.0.properties.data.items.properties.description.description: The description of the cloud provider.
paths./v1/clouds.get.responses.200.content.application/json.examples.1.summary: success
paths./v1/clouds.get.responses.200.content.application/json.examples.2.summary: failure
paths./v1/regions.get.summary: List Cloud Regions
paths./v1/regions.get.description: Lists all available cloud regions of a specific cloud provider.
paths./v1/regions.get.parameters.0.description: 
paths./v1/regions.get.parameters.1.description: The ID of a valid cloud provider.
paths./v1/regions.get.responses.200.description: Returns a list of all available regions that the specified cloud provider offers.
paths./v1/regions.get.responses.200.content.application/json.schema.anyOf.0.properties.data.items.properties.cloudId.description: The ID of a cloud provider
paths./v1/regions.get.responses.200.content.application/json.schema.anyOf.0.properties.data.items.properties.regionId.description: The ID of a cloud region
paths./v1/regions.get.responses.200.content.application/json.schema.anyOf.0.properties.data.items.properties.apiBaseUrl.description: The base URL of an Zilliz Cloud open API endpiont
paths./v1/clusters.get.summary: List Clusters
paths./v1/clusters.get.description: Lists all clusters in the specified cloud region.
paths./v1/clusters.get.parameters.0.description: 
paths./v1/clusters.get.parameters.1.description: The number of records to return on each page.
paths./v1/clusters.get.parameters.2.description: The current page number.
paths./v1/clusters.get.responses.200.description: Returns a list of your clusters.
paths./v1/clusters.get.responses.200.content.application/json.schema.anyOf.0.properties.data.properties.count.description: The total number of clusters returned.
paths./v1/clusters.get.responses.200.content.application/json.schema.anyOf.0.properties.data.properties.currentPage.description: The current page in the results.
paths./v1/clusters.get.responses.200.content.application/json.schema.anyOf.0.properties.data.properties.pageSize.description: The number of clusters per page in the results.
paths./v1/clusters.get.responses.200.content.application/json.schema.anyOf.0.properties.data.properties.clusters.items.properties.clusterId.description: The ID of the cluster.
paths./v1/clusters.get.responses.200.content.application/json.schema.anyOf.0.properties.data.properties.clusters.items.properties.clusterName.description: The name of the cluster.
paths./v1/clusters.get.responses.200.content.application/json.schema.anyOf.0.properties.data.properties.clusters.items.properties.description.description: An optional description about the cluster.
paths./v1/clusters.get.responses.200.content.application/json.schema.anyOf.0.properties.data.properties.clusters.items.properties.regionId.description: The ID of the region where the cluster exists.
paths./v1/clusters.get.responses.200.content.application/json.schema.anyOf.0.properties.data.properties.clusters.items.properties.clusterType.description: The type of CU associated with the cluster. Possible values are **Performance-optimized** and **Capacity-optimized**.
paths./v1/clusters.get.responses.200.content.application/json.schema.anyOf.0.properties.data.properties.clusters.items.properties.cuSize.description: The size of the CU associated with the cluster.
paths./v1/clusters.get.responses.200.content.application/json.schema.anyOf.0.properties.data.properties.clusters.items.properties.status.description: The current status of the cluster. Possible values are **INITIALIZING**, **RUNNING**, **SUSPENDING**, and **RESUMING**.
paths./v1/clusters.get.responses.200.content.application/json.schema.anyOf.0.properties.data.properties.clusters.items.properties.connectAddress.description: The public endpoint of the cluster. You can connect to the cluster using this endpoint from the public network.
paths./v1/clusters.get.responses.200.content.application/json.schema.anyOf.0.properties.data.properties.clusters.items.properties.privateLinkAddress.description: The private endpoint of the cluster. You can set up a private link to allow your VPS in the same cloud region to access your cluster.
paths./v1/clusters.get.responses.200.content.application/json.schema.anyOf.0.properties.data.properties.clusters.items.properties.createTime.description: The time at which the cluster has been created.
paths./v1/clusters.get.responses.200.content.application/json.schema.anyOf.0.properties.data.properties.clusters.description: An array of clusters in detail.
paths./v1/clusters/clusters/{clusterId}.get.summary: Describe Cluster
paths./v1/clusters/clusters/{clusterId}.get.description: Describe a cluster in detail.
paths./v1/clusters/clusters/{clusterId}.get.parameters.0.description: 
paths./v1/clusters/clusters/{clusterId}.get.parameters.1.description: The ID of a cluster to which this operation applies.
paths./v1/clusters/clusters/{clusterId}.get.responses.200.description: Returns an array of clusters in detail.
paths./v1/clusters/clusters/{clusterId}.get.responses.200.content.application/json.schema.properties.data.properties.clusterId.description: The ID of the cluster.
paths./v1/clusters/clusters/{clusterId}.get.responses.200.content.application/json.schema.properties.data.properties.clusterName.description: The Name of the cluster.
paths./v1/clusters/clusters/{clusterId}.get.responses.200.content.application/json.schema.properties.data.properties.description.description: An optional description of the cluster.
paths./v1/clusters/clusters/{clusterId}.get.responses.200.content.application/json.schema.properties.data.properties.regionId.description: The ID of the cloud region where the cluster exists.
paths./v1/clusters/clusters/{clusterId}.get.responses.200.content.application/json.schema.properties.data.properties.clusterType.description: The type of the CU associated with the cluster.
paths./v1/clusters/clusters/{clusterId}.get.responses.200.content.application/json.schema.properties.data.properties.cuSize.description: The size of the CU used by the cluster.
paths./v1/clusters/clusters/{clusterId}.get.responses.200.content.application/json.schema.properties.data.properties.status.description: The current status of the cluster. Possible values are **CREATING**, **RUNNING**, **SUSPENDING**, and **RESUMING**.
paths./v1/clusters/clusters/{clusterId}.get.responses.200.content.application/json.schema.properties.data.properties.connectAddress.description: The public endpoint of the cluster. You can use this to connect to your cluster from public networks.
paths./v1/clusters/clusters/{clusterId}.get.responses.200.content.application/json.schema.properties.data.properties.privateLinkAddress.description: The private endpoint of the cluster. You can use this to connect to your cluster from your VPSs in the same cloud region.
paths./v1/clusters/clusters/{clusterId}.get.responses.200.content.application/json.schema.properties.data.properties.createTime.description: The time when this cluster has been creaated.
paths./v1/clusters/clusters/{clusterId}.get.responses.200.content.application/json.schema.properties.data.properties.storageSize.description: The storage size of the cluster.
paths./v1/clusters/clusters/{clusterId}.get.responses.200.content.application/json.schema.properties.data.properties.snapshotNumber.description: The number of snapshofts created from the cluster.
paths./v1/clusters/clusters/{clusterId}.get.responses.200.content.application/json.schema.properties.data.properties.createProgress.description: The creation progress of the cluster.
paths./v1/clusters/{clusterId}/resume.post.summary: Resume Cluster
paths./v1/clusters/{clusterId}/resume.post.description: Resume a suspended cluster.
paths./v1/clusters/{clusterId}/resume.post.parameters.0.description: 
paths./v1/clusters/{clusterId}/resume.post.parameters.1.description: The ID of a cluster to which this operation applies.
paths./v1/clusters/{clusterId}/resume.post.responses.200.description: Returns the ID of the affected cluster.
paths./v1/clusters/{clusterId}/resume.post.responses.200.content.application/json.schema.properties.data.properties.clusterId.description: The ID of a cluster.
paths./v1/clusters/{clusterId}/resume.post.responses.200.content.application/json.schema.properties.data.properties.prompt.description: The statement indicating that the current operation succeeds.
paths./v1/clusters/{clusterId}/suspend.post.summary: Suspend Cluster
paths./v1/clusters/{clusterId}/suspend.post.description: Suspend a specified cluster. This operation will only stop the cluster and your data will remain intact.
paths./v1/clusters/{clusterId}/suspend.post.parameters.0.description: 
paths./v1/clusters/{clusterId}/suspend.post.parameters.1.description: The ID of a cluster to which this operation applies.
paths./v1/clusters/{clusterId}/suspend.post.responses.200.description: Returns the ID of the affected cluster.
paths./v1/clusters/{clusterId}/suspend.post.responses.200.content.application/json.schema.properties.data.properties.clusterId.description: The ID of a cluster.
paths./v1/clusters/{clusterId}/suspend.post.responses.200.content.application/json.schema.properties.data.properties.prompt.description: The statement indicating that the current operation succeeds.
paths./v1/vector/collections.get.summary: List Collections
paths./v1/vector/collections.get.description: Lists collections in a cluster.
paths./v1/vector/collections.get.parameters.0.description: 
paths./v1/vector/collections.get.responses.200.description: Returns a list of collections in the specified cluster.
paths./v1/vector/collections/create.post.summary: Create Collection
paths./v1/vector/collections/create.post.description: Creates a collection in a cluster.
paths./v1/vector/collections/create.post.parameters.0.description: 
paths./v1/vector/collections/create.post.requestBody.content.application/json.schema.properties.collectionName.description: The name of the collection to create.
paths./v1/vector/collections/create.post.requestBody.content.application/json.schema.properties.dimension.description: The number of dimensions for the vector field of the collection.
paths./v1/vector/collections/create.post.requestBody.content.application/json.schema.properties.metricType.description: The distance metric used for the collection.
paths./v1/vector/collections/create.post.requestBody.content.application/json.schema.properties.primaryField.description: The primary key field.
paths./v1/vector/collections/create.post.requestBody.content.application/json.schema.properties.vectorField.description: The vector field.
paths./v1/vector/collections/create.post.requestBody.content.application/json.schema.properties.description.description: The description of the collection
paths./v1/vector/collections/create.post.responses.200.description: Returns an empty object.
paths./v1/vector/collections/describe.get.summary: Describe Collection
paths./v1/vector/collections/describe.get.description: Describes the details of a collection.
paths./v1/vector/collections/describe.get.parameters.0.description: 
paths./v1/vector/collections/describe.get.parameters.1.description: The name of the collection to describe.
paths./v1/vector/collections/describe.get.responses.200.description: Returns the specified collection in detail.
paths./v1/vector/collections/describe.get.responses.200.content.application/json.schema.properties.data.properties.collectionName.description: The name of the collection.
paths./v1/vector/collections/describe.get.responses.200.content.application/json.schema.properties.data.properties.description.description: An optional description of the collection.
paths./v1/vector/collections/describe.get.responses.200.content.application/json.schema.properties.data.properties.fields.items.properties.autoId.description: Whether the primary key automatically increments.
paths./v1/vector/collections/describe.get.responses.200.content.application/json.schema.properties.data.properties.fields.items.properties.description.description: An optional description of the field.
paths./v1/vector/collections/describe.get.responses.200.content.application/json.schema.properties.data.properties.fields.items.properties.name.description: The name of the field.
paths./v1/vector/collections/describe.get.responses.200.content.application/json.schema.properties.data.properties.fields.items.properties.primaryKey.description: Whether the field is a primary field.
paths./v1/vector/collections/describe.get.responses.200.content.application/json.schema.properties.data.properties.fields.items.properties.type.description: The data type of the values in this field.
paths./v1/vector/collections/describe.get.responses.200.content.application/json.schema.properties.data.properties.fields.description: An field array
paths./v1/vector/collections/describe.get.responses.200.content.application/json.schema.properties.data.properties.indexes.items.properties.fieldName.description: The name of the indexed field.
paths./v1/vector/collections/describe.get.responses.200.content.application/json.schema.properties.data.properties.indexes.items.properties.indexName.description: The name of the generated index files.
paths./v1/vector/collections/describe.get.responses.200.content.application/json.schema.properties.data.properties.indexes.items.properties.metricType.description: The metric type used in the index process.
paths./v1/vector/collections/describe.get.responses.200.content.application/json.schema.properties.data.properties.indexes.description: An index array
paths./v1/vector/collections/describe.get.responses.200.content.application/json.schema.properties.data.properties.load.description: The load status of the collection. Possible values are **unload**, **loading**, and **loaded**.
paths./v1/vector/collections/describe.get.responses.200.content.application/json.schema.properties.data.properties.shardsNum.description: The number of shards in the collection.
paths./v1/vector/collections/describe.get.responses.200.content.application/json.schema.properties.data.properties.enableDynamic.description: Whether the dynamic JSON feature is enabled for this collection.
paths./v1/vector/collections/drop.post.summary: Drop Collection
paths./v1/vector/collections/drop.post.description: Drops a collection. This operation erases your collection data. Exercise caution when performing this operation.
paths./v1/vector/collections/drop.post.parameters.0.description: 
paths./v1/vector/collections/drop.post.requestBody.content.application/json.schema.properties.collectionName.description: The name of the collection to delete.
paths./v1/vector/collections/drop.post.responses.200.description: Returns an empty object.
paths./v1/vector/delete.post.summary: Delete
paths./v1/vector/delete.post.description: Deletes one or more entities from a collection.
paths./v1/vector/delete.post.parameters.0.description: 
paths./v1/vector/delete.post.requestBody.content.application/json.schema.oneOf.0.properties.collectionName.description: The name of the collection to which this operation applies.
paths./v1/vector/delete.post.requestBody.content.application/json.schema.oneOf.0.properties.id.description: The ID of the entity to be retrieved
paths./v1/vector/delete.post.requestBody.content.application/json.schema.oneOf.1.properties.collectionName.description: The name of the collection to which this operation applies.
paths./v1/vector/delete.post.requestBody.content.application/json.schema.oneOf.1.properties.id.description: An array of IDs of the entities to be retrieved
paths./v1/vector/delete.post.requestBody.content.application/json.schema.oneOf.2.properties.collectionName.description: The name of the collection to which this operation applies.
paths./v1/vector/delete.post.requestBody.content.application/json.schema.oneOf.2.properties.id.description: The ID of the entity to be retrieved
paths./v1/vector/delete.post.requestBody.content.application/json.schema.oneOf.3.properties.collectionName.description: The name of the collection to which this operation applies.
paths./v1/vector/delete.post.requestBody.content.application/json.schema.oneOf.3.properties.id.description: An array of IDs of the entities to be retrieved
paths./v1/vector/delete.post.responses.200.description: Returns an empty object.
paths./v1/vector/insert.post.summary: Insert
paths./v1/vector/insert.post.description: Inserts one or more entities into a collection.
paths./v1/vector/insert.post.parameters.0.description: 
paths./v1/vector/insert.post.requestBody.content.application/json.schema.oneOf.0.properties.collectionName.description: The name of the collection to which entities will be inserted.
paths./v1/vector/insert.post.requestBody.content.application/json.schema.oneOf.0.properties.data.description: An entity object. Note that the keys in the entity should match the collection schema.
paths./v1/vector/insert.post.requestBody.content.application/json.schema.oneOf.1.properties.collectionName.description: The name of the collection to which entities will be inserted.
paths./v1/vector/insert.post.requestBody.content.application/json.schema.oneOf.1.properties.data.description: An array of entity objects. Note that the keys in an entity object should match the collection schema
paths./v1/vector/insert.post.responses.200.description: Returns the number of inserted entities and an array of their IDs.
paths./v1/vector/insert.post.responses.200.content.application/json.schema.properties.data.properties.insertCount.description: The number of inserted entities.
paths./v1/vector/insert.post.responses.200.content.application/json.schema.properties.data.properties.insertIds.description: An array of the IDs of inserted entities.
paths./v1/vector/search.post.summary: Search
paths./v1/vector/search.post.description: Conducts a similarity search in a collection. 
paths./v1/vector/search.post.parameters.0.description: 
paths./v1/vector/search.post.requestBody.content.application/json.schema.properties.collectionName.description: The name of the collection to which this operation applies.
paths./v1/vector/search.post.requestBody.content.application/json.schema.properties.filter.description: The filter used to find matches for the search
paths./v1/vector/search.post.requestBody.content.application/json.schema.properties.limit.description: The maximum number of entities to return.<br>The sum of this value of that of `offset` should be less than **1024**.
paths./v1/vector/search.post.requestBody.content.application/json.schema.properties.offset.description: The number of entities to skip in the search results.<br>The sum of this value and that of `limit` should not be greater than **1024**.
paths./v1/vector/search.post.requestBody.content.application/json.schema.properties.outputFields.description: An array of fields to return along with the search results.
paths./v1/vector/search.post.requestBody.content.application/json.schema.properties.vector.description: The query vector in the form of a list of floating numbers.
paths./v1/vector/search.post.responses.200.description: Returns the search results.
paths./v1/vector/query.post.summary: Query
paths./v1/vector/query.post.description: Conducts a vector query in a collection.
paths./v1/vector/query.post.parameters.0.description: 
paths./v1/vector/query.post.requestBody.content.application/json.schema.properties.collectionName.description: The name of the collection to which this operation applies.
paths./v1/vector/query.post.requestBody.content.application/json.schema.properties.filter.description: The filter used to find matches for the search.
paths./v1/vector/query.post.requestBody.content.application/json.schema.properties.limit.description: The maximum number of entities to return.<br>The sum of this value and that of `offset` should be less than **16384**.
paths./v1/vector/query.post.requestBody.content.application/json.schema.properties.offset.description: The number of entities to skip in the search results.<br>The sum of this value and that of `limit` should be less than **16384**.
paths./v1/vector/query.post.requestBody.content.application/json.schema.properties.outputFields.description: An array of fields to return along with the search results.
paths./v1/vector/query.post.responses.200.description: Returns the search results.
paths./v1/vector/get.post.summary: Get
paths./v1/vector/get.post.description: Conducts a similarity search in a collection.
paths./v1/vector/get.post.parameters.0.description: 
paths./v1/vector/get.post.requestBody.content.application/json.schema.oneOf.0.properties.collectionName.description: The name of the collection to which this operation applies.
paths./v1/vector/get.post.requestBody.content.application/json.schema.oneOf.0.properties.outputFields.description: An array of fields to return along with the search results.
paths./v1/vector/get.post.requestBody.content.application/json.schema.oneOf.0.properties.id.description: The ID of the entity to be retrieved
paths./v1/vector/get.post.requestBody.content.application/json.schema.oneOf.1.properties.collectionName.description: The name of the collection to which this operation applies.
paths./v1/vector/get.post.requestBody.content.application/json.schema.oneOf.1.properties.outputFields.description: An array of fields to return along with the search results.
paths./v1/vector/get.post.requestBody.content.application/json.schema.oneOf.1.properties.id.description: An array of IDs of the entities to be retrieved
paths./v1/vector/get.post.requestBody.content.application/json.schema.oneOf.2.properties.collectionName.description: The name of the collection to which this operation applies.
paths./v1/vector/get.post.requestBody.content.application/json.schema.oneOf.2.properties.outputFields.description: An array of fields to return along with the search results.
paths./v1/vector/get.post.requestBody.content.application/json.schema.oneOf.2.properties.id.description: The ID of entity to be retrieved
paths./v1/vector/get.post.requestBody.content.application/json.schema.oneOf.3.properties.collectionName.description: The name of the collection to which this operation applies.
paths./v1/vector/get.post.requestBody.content.application/json.schema.oneOf.3.properties.outputFields.description: An array of fields to return along with the search results.
paths./v1/vector/get.post.requestBody.content.application/json.schema.oneOf.3.properties.id.description: An array of IDs of the entities to be retrieved
paths./v1/vector/get.post.responses.200.description: Returns the search results.